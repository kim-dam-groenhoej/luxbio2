//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LuxBio.WindowsApp.LuxBioWCF {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://mycompany.com/LuxBio.WCF", ConfigurationName="LuxBioWCF.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mycompany.com/LuxBio.WCF/IService1/GetAllMovies", ReplyAction="http://mycompany.com/LuxBio.WCF/IService1/GetAllMoviesResponse")]
        LuxBio.Library.Models.MovieInfo[] GetAllMovies();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mycompany.com/LuxBio.WCF/IService1/GetAllMovies", ReplyAction="http://mycompany.com/LuxBio.WCF/IService1/GetAllMoviesResponse")]
        System.Threading.Tasks.Task<LuxBio.Library.Models.MovieInfo[]> GetAllMoviesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mycompany.com/LuxBio.WCF/IService1/GetMovie", ReplyAction="http://mycompany.com/LuxBio.WCF/IService1/GetMovieResponse")]
        LuxBio.Library.Models.MovieInfo GetMovie(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mycompany.com/LuxBio.WCF/IService1/GetMovie", ReplyAction="http://mycompany.com/LuxBio.WCF/IService1/GetMovieResponse")]
        System.Threading.Tasks.Task<LuxBio.Library.Models.MovieInfo> GetMovieAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mycompany.com/LuxBio.WCF/IService1/GetHall", ReplyAction="http://mycompany.com/LuxBio.WCF/IService1/GetHallResponse")]
        LuxBio.Library.Models.CinemaHall GetHall(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mycompany.com/LuxBio.WCF/IService1/GetHall", ReplyAction="http://mycompany.com/LuxBio.WCF/IService1/GetHallResponse")]
        System.Threading.Tasks.Task<LuxBio.Library.Models.CinemaHall> GetHallAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mycompany.com/LuxBio.WCF/IService1/GetMoviePlayTime", ReplyAction="http://mycompany.com/LuxBio.WCF/IService1/GetMoviePlayTimeResponse")]
        LuxBio.Library.Models.MoviePlayTime GetMoviePlayTime(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mycompany.com/LuxBio.WCF/IService1/GetMoviePlayTime", ReplyAction="http://mycompany.com/LuxBio.WCF/IService1/GetMoviePlayTimeResponse")]
        System.Threading.Tasks.Task<LuxBio.Library.Models.MoviePlayTime> GetMoviePlayTimeAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mycompany.com/LuxBio.WCF/IService1/GetMoviePlayTimes", ReplyAction="http://mycompany.com/LuxBio.WCF/IService1/GetMoviePlayTimesResponse")]
        LuxBio.Library.Models.MoviePlayTime[] GetMoviePlayTimes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mycompany.com/LuxBio.WCF/IService1/GetMoviePlayTimes", ReplyAction="http://mycompany.com/LuxBio.WCF/IService1/GetMoviePlayTimesResponse")]
        System.Threading.Tasks.Task<LuxBio.Library.Models.MoviePlayTime[]> GetMoviePlayTimesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mycompany.com/LuxBio.WCF/IService1/GetAllChairsState", ReplyAction="http://mycompany.com/LuxBio.WCF/IService1/GetAllChairsStateResponse")]
        LuxBio.Library.Models.ExtraPropperties.Chair[] GetAllChairsState(LuxBio.Library.Models.MoviePlayTime moviePlayTime, LuxBio.Library.Models.CinemaHall hall);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mycompany.com/LuxBio.WCF/IService1/GetAllChairsState", ReplyAction="http://mycompany.com/LuxBio.WCF/IService1/GetAllChairsStateResponse")]
        System.Threading.Tasks.Task<LuxBio.Library.Models.ExtraPropperties.Chair[]> GetAllChairsStateAsync(LuxBio.Library.Models.MoviePlayTime moviePlayTime, LuxBio.Library.Models.CinemaHall hall);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mycompany.com/LuxBio.WCF/IService1/CreateReserve", ReplyAction="http://mycompany.com/LuxBio.WCF/IService1/CreateReserveResponse")]
        void CreateReserve(LuxBio.Library.Models.MoviePlayTime moviePlayTime, LuxBio.Library.Models.Chair[] chairs, LuxBio.Library.Models.Customer customer, System.DateTime dato);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mycompany.com/LuxBio.WCF/IService1/CreateReserve", ReplyAction="http://mycompany.com/LuxBio.WCF/IService1/CreateReserveResponse")]
        System.Threading.Tasks.Task CreateReserveAsync(LuxBio.Library.Models.MoviePlayTime moviePlayTime, LuxBio.Library.Models.Chair[] chairs, LuxBio.Library.Models.Customer customer, System.DateTime dato);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mycompany.com/LuxBio.WCF/IService1/GetCustomer", ReplyAction="http://mycompany.com/LuxBio.WCF/IService1/GetCustomerResponse")]
        LuxBio.Library.Models.Customer GetCustomer(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mycompany.com/LuxBio.WCF/IService1/GetCustomer", ReplyAction="http://mycompany.com/LuxBio.WCF/IService1/GetCustomerResponse")]
        System.Threading.Tasks.Task<LuxBio.Library.Models.Customer> GetCustomerAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mycompany.com/LuxBio.WCF/IService1/FindBestChairs", ReplyAction="http://mycompany.com/LuxBio.WCF/IService1/FindBestChairsResponse")]
        LuxBio.Library.Models.ExtraPropperties.Chair[] FindBestChairs(LuxBio.Library.Models.MoviePlayTime moviePlayTime, int chairCounts);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mycompany.com/LuxBio.WCF/IService1/FindBestChairs", ReplyAction="http://mycompany.com/LuxBio.WCF/IService1/FindBestChairsResponse")]
        System.Threading.Tasks.Task<LuxBio.Library.Models.ExtraPropperties.Chair[]> FindBestChairsAsync(LuxBio.Library.Models.MoviePlayTime moviePlayTime, int chairCounts);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mycompany.com/LuxBio.WCF/IService1/GetLockedChairs", ReplyAction="http://mycompany.com/LuxBio.WCF/IService1/GetLockedChairsResponse")]
        LuxBio.Library.Models.LockedChair[] GetLockedChairs(LuxBio.Library.Models.MoviePlayTime movieplaytime, LuxBio.Library.Models.CinemaHall hall);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mycompany.com/LuxBio.WCF/IService1/GetLockedChairs", ReplyAction="http://mycompany.com/LuxBio.WCF/IService1/GetLockedChairsResponse")]
        System.Threading.Tasks.Task<LuxBio.Library.Models.LockedChair[]> GetLockedChairsAsync(LuxBio.Library.Models.MoviePlayTime movieplaytime, LuxBio.Library.Models.CinemaHall hall);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mycompany.com/LuxBio.WCF/IService1/LockChairs", ReplyAction="http://mycompany.com/LuxBio.WCF/IService1/LockChairsResponse")]
        void LockChairs(LuxBio.Library.Models.MoviePlayTime movieplaytime, LuxBio.Library.Models.Chair[] chairs, LuxBio.Library.Models.Customer customer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mycompany.com/LuxBio.WCF/IService1/LockChairs", ReplyAction="http://mycompany.com/LuxBio.WCF/IService1/LockChairsResponse")]
        System.Threading.Tasks.Task LockChairsAsync(LuxBio.Library.Models.MoviePlayTime movieplaytime, LuxBio.Library.Models.Chair[] chairs, LuxBio.Library.Models.Customer customer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mycompany.com/LuxBio.WCF/IService1/GetLockedChairsForUser", ReplyAction="http://mycompany.com/LuxBio.WCF/IService1/GetLockedChairsForUserResponse")]
        LuxBio.Library.Models.LockedChair[] GetLockedChairsForUser(LuxBio.Library.Models.MoviePlayTime movieplaytime, LuxBio.Library.Models.Customer customer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mycompany.com/LuxBio.WCF/IService1/GetLockedChairsForUser", ReplyAction="http://mycompany.com/LuxBio.WCF/IService1/GetLockedChairsForUserResponse")]
        System.Threading.Tasks.Task<LuxBio.Library.Models.LockedChair[]> GetLockedChairsForUserAsync(LuxBio.Library.Models.MoviePlayTime movieplaytime, LuxBio.Library.Models.Customer customer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mycompany.com/LuxBio.WCF/IService1/ReleaseLocked", ReplyAction="http://mycompany.com/LuxBio.WCF/IService1/ReleaseLockedResponse")]
        void ReleaseLocked(LuxBio.Library.Models.MoviePlayTime movieplaytime, LuxBio.Library.Models.Chair[] chairs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mycompany.com/LuxBio.WCF/IService1/ReleaseLocked", ReplyAction="http://mycompany.com/LuxBio.WCF/IService1/ReleaseLockedResponse")]
        System.Threading.Tasks.Task ReleaseLockedAsync(LuxBio.Library.Models.MoviePlayTime movieplaytime, LuxBio.Library.Models.Chair[] chairs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mycompany.com/LuxBio.WCF/IService1/ReleaseLockedWithCustomer", ReplyAction="http://mycompany.com/LuxBio.WCF/IService1/ReleaseLockedWithCustomerResponse")]
        void ReleaseLockedWithCustomer(LuxBio.Library.Models.MoviePlayTime movieplaytime, LuxBio.Library.Models.Chair[] chairs, LuxBio.Library.Models.Customer customer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mycompany.com/LuxBio.WCF/IService1/ReleaseLockedWithCustomer", ReplyAction="http://mycompany.com/LuxBio.WCF/IService1/ReleaseLockedWithCustomerResponse")]
        System.Threading.Tasks.Task ReleaseLockedWithCustomerAsync(LuxBio.Library.Models.MoviePlayTime movieplaytime, LuxBio.Library.Models.Chair[] chairs, LuxBio.Library.Models.Customer customer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mycompany.com/LuxBio.WCF/IService1/FindChairsByFirstSelected", ReplyAction="http://mycompany.com/LuxBio.WCF/IService1/FindChairsByFirstSelectedResponse")]
        LuxBio.Library.Models.ExtraPropperties.Chair[] FindChairsByFirstSelected(LuxBio.Library.Models.ExtraPropperties.Chair[] statedChairsFromRow, LuxBio.Library.Models.ExtraPropperties.Chair selectedChair, LuxBio.Library.Models.MoviePlayTime moviePlayTime, int chairCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mycompany.com/LuxBio.WCF/IService1/FindChairsByFirstSelected", ReplyAction="http://mycompany.com/LuxBio.WCF/IService1/FindChairsByFirstSelectedResponse")]
        System.Threading.Tasks.Task<LuxBio.Library.Models.ExtraPropperties.Chair[]> FindChairsByFirstSelectedAsync(LuxBio.Library.Models.ExtraPropperties.Chair[] statedChairsFromRow, LuxBio.Library.Models.ExtraPropperties.Chair selectedChair, LuxBio.Library.Models.MoviePlayTime moviePlayTime, int chairCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mycompany.com/LuxBio.WCF/IService1/ReleaseLockedByTime", ReplyAction="http://mycompany.com/LuxBio.WCF/IService1/ReleaseLockedByTimeResponse")]
        void ReleaseLockedByTime(LuxBio.Library.Models.MoviePlayTime movieplaytime, LuxBio.Library.Models.Chair[] chairs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mycompany.com/LuxBio.WCF/IService1/ReleaseLockedByTime", ReplyAction="http://mycompany.com/LuxBio.WCF/IService1/ReleaseLockedByTimeResponse")]
        System.Threading.Tasks.Task ReleaseLockedByTimeAsync(LuxBio.Library.Models.MoviePlayTime movieplaytime, LuxBio.Library.Models.Chair[] chairs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mycompany.com/LuxBio.WCF/IService1/UpdateLockedChairs", ReplyAction="http://mycompany.com/LuxBio.WCF/IService1/UpdateLockedChairsResponse")]
        void UpdateLockedChairs(LuxBio.Library.Models.MoviePlayTime movieplaytime, LuxBio.Library.Models.Chair[] chairs, LuxBio.Library.Models.Customer customer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://mycompany.com/LuxBio.WCF/IService1/UpdateLockedChairs", ReplyAction="http://mycompany.com/LuxBio.WCF/IService1/UpdateLockedChairsResponse")]
        System.Threading.Tasks.Task UpdateLockedChairsAsync(LuxBio.Library.Models.MoviePlayTime movieplaytime, LuxBio.Library.Models.Chair[] chairs, LuxBio.Library.Models.Customer customer);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : LuxBio.WindowsApp.LuxBioWCF.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<LuxBio.WindowsApp.LuxBioWCF.IService1>, LuxBio.WindowsApp.LuxBioWCF.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public LuxBio.Library.Models.MovieInfo[] GetAllMovies() {
            return base.Channel.GetAllMovies();
        }
        
        public System.Threading.Tasks.Task<LuxBio.Library.Models.MovieInfo[]> GetAllMoviesAsync() {
            return base.Channel.GetAllMoviesAsync();
        }
        
        public LuxBio.Library.Models.MovieInfo GetMovie(int id) {
            return base.Channel.GetMovie(id);
        }
        
        public System.Threading.Tasks.Task<LuxBio.Library.Models.MovieInfo> GetMovieAsync(int id) {
            return base.Channel.GetMovieAsync(id);
        }
        
        public LuxBio.Library.Models.CinemaHall GetHall(int id) {
            return base.Channel.GetHall(id);
        }
        
        public System.Threading.Tasks.Task<LuxBio.Library.Models.CinemaHall> GetHallAsync(int id) {
            return base.Channel.GetHallAsync(id);
        }
        
        public LuxBio.Library.Models.MoviePlayTime GetMoviePlayTime(int id) {
            return base.Channel.GetMoviePlayTime(id);
        }
        
        public System.Threading.Tasks.Task<LuxBio.Library.Models.MoviePlayTime> GetMoviePlayTimeAsync(int id) {
            return base.Channel.GetMoviePlayTimeAsync(id);
        }
        
        public LuxBio.Library.Models.MoviePlayTime[] GetMoviePlayTimes() {
            return base.Channel.GetMoviePlayTimes();
        }
        
        public System.Threading.Tasks.Task<LuxBio.Library.Models.MoviePlayTime[]> GetMoviePlayTimesAsync() {
            return base.Channel.GetMoviePlayTimesAsync();
        }
        
        public LuxBio.Library.Models.ExtraPropperties.Chair[] GetAllChairsState(LuxBio.Library.Models.MoviePlayTime moviePlayTime, LuxBio.Library.Models.CinemaHall hall) {
            return base.Channel.GetAllChairsState(moviePlayTime, hall);
        }
        
        public System.Threading.Tasks.Task<LuxBio.Library.Models.ExtraPropperties.Chair[]> GetAllChairsStateAsync(LuxBio.Library.Models.MoviePlayTime moviePlayTime, LuxBio.Library.Models.CinemaHall hall) {
            return base.Channel.GetAllChairsStateAsync(moviePlayTime, hall);
        }
        
        public void CreateReserve(LuxBio.Library.Models.MoviePlayTime moviePlayTime, LuxBio.Library.Models.Chair[] chairs, LuxBio.Library.Models.Customer customer, System.DateTime dato) {
            base.Channel.CreateReserve(moviePlayTime, chairs, customer, dato);
        }
        
        public System.Threading.Tasks.Task CreateReserveAsync(LuxBio.Library.Models.MoviePlayTime moviePlayTime, LuxBio.Library.Models.Chair[] chairs, LuxBio.Library.Models.Customer customer, System.DateTime dato) {
            return base.Channel.CreateReserveAsync(moviePlayTime, chairs, customer, dato);
        }
        
        public LuxBio.Library.Models.Customer GetCustomer(int id) {
            return base.Channel.GetCustomer(id);
        }
        
        public System.Threading.Tasks.Task<LuxBio.Library.Models.Customer> GetCustomerAsync(int id) {
            return base.Channel.GetCustomerAsync(id);
        }
        
        public LuxBio.Library.Models.ExtraPropperties.Chair[] FindBestChairs(LuxBio.Library.Models.MoviePlayTime moviePlayTime, int chairCounts) {
            return base.Channel.FindBestChairs(moviePlayTime, chairCounts);
        }
        
        public System.Threading.Tasks.Task<LuxBio.Library.Models.ExtraPropperties.Chair[]> FindBestChairsAsync(LuxBio.Library.Models.MoviePlayTime moviePlayTime, int chairCounts) {
            return base.Channel.FindBestChairsAsync(moviePlayTime, chairCounts);
        }
        
        public LuxBio.Library.Models.LockedChair[] GetLockedChairs(LuxBio.Library.Models.MoviePlayTime movieplaytime, LuxBio.Library.Models.CinemaHall hall) {
            return base.Channel.GetLockedChairs(movieplaytime, hall);
        }
        
        public System.Threading.Tasks.Task<LuxBio.Library.Models.LockedChair[]> GetLockedChairsAsync(LuxBio.Library.Models.MoviePlayTime movieplaytime, LuxBio.Library.Models.CinemaHall hall) {
            return base.Channel.GetLockedChairsAsync(movieplaytime, hall);
        }
        
        public void LockChairs(LuxBio.Library.Models.MoviePlayTime movieplaytime, LuxBio.Library.Models.Chair[] chairs, LuxBio.Library.Models.Customer customer) {
            base.Channel.LockChairs(movieplaytime, chairs, customer);
        }
        
        public System.Threading.Tasks.Task LockChairsAsync(LuxBio.Library.Models.MoviePlayTime movieplaytime, LuxBio.Library.Models.Chair[] chairs, LuxBio.Library.Models.Customer customer) {
            return base.Channel.LockChairsAsync(movieplaytime, chairs, customer);
        }
        
        public LuxBio.Library.Models.LockedChair[] GetLockedChairsForUser(LuxBio.Library.Models.MoviePlayTime movieplaytime, LuxBio.Library.Models.Customer customer) {
            return base.Channel.GetLockedChairsForUser(movieplaytime, customer);
        }
        
        public System.Threading.Tasks.Task<LuxBio.Library.Models.LockedChair[]> GetLockedChairsForUserAsync(LuxBio.Library.Models.MoviePlayTime movieplaytime, LuxBio.Library.Models.Customer customer) {
            return base.Channel.GetLockedChairsForUserAsync(movieplaytime, customer);
        }
        
        public void ReleaseLocked(LuxBio.Library.Models.MoviePlayTime movieplaytime, LuxBio.Library.Models.Chair[] chairs) {
            base.Channel.ReleaseLocked(movieplaytime, chairs);
        }
        
        public System.Threading.Tasks.Task ReleaseLockedAsync(LuxBio.Library.Models.MoviePlayTime movieplaytime, LuxBio.Library.Models.Chair[] chairs) {
            return base.Channel.ReleaseLockedAsync(movieplaytime, chairs);
        }
        
        public void ReleaseLockedWithCustomer(LuxBio.Library.Models.MoviePlayTime movieplaytime, LuxBio.Library.Models.Chair[] chairs, LuxBio.Library.Models.Customer customer) {
            base.Channel.ReleaseLockedWithCustomer(movieplaytime, chairs, customer);
        }
        
        public System.Threading.Tasks.Task ReleaseLockedWithCustomerAsync(LuxBio.Library.Models.MoviePlayTime movieplaytime, LuxBio.Library.Models.Chair[] chairs, LuxBio.Library.Models.Customer customer) {
            return base.Channel.ReleaseLockedWithCustomerAsync(movieplaytime, chairs, customer);
        }
        
        public LuxBio.Library.Models.ExtraPropperties.Chair[] FindChairsByFirstSelected(LuxBio.Library.Models.ExtraPropperties.Chair[] statedChairsFromRow, LuxBio.Library.Models.ExtraPropperties.Chair selectedChair, LuxBio.Library.Models.MoviePlayTime moviePlayTime, int chairCount) {
            return base.Channel.FindChairsByFirstSelected(statedChairsFromRow, selectedChair, moviePlayTime, chairCount);
        }
        
        public System.Threading.Tasks.Task<LuxBio.Library.Models.ExtraPropperties.Chair[]> FindChairsByFirstSelectedAsync(LuxBio.Library.Models.ExtraPropperties.Chair[] statedChairsFromRow, LuxBio.Library.Models.ExtraPropperties.Chair selectedChair, LuxBio.Library.Models.MoviePlayTime moviePlayTime, int chairCount) {
            return base.Channel.FindChairsByFirstSelectedAsync(statedChairsFromRow, selectedChair, moviePlayTime, chairCount);
        }
        
        public void ReleaseLockedByTime(LuxBio.Library.Models.MoviePlayTime movieplaytime, LuxBio.Library.Models.Chair[] chairs) {
            base.Channel.ReleaseLockedByTime(movieplaytime, chairs);
        }
        
        public System.Threading.Tasks.Task ReleaseLockedByTimeAsync(LuxBio.Library.Models.MoviePlayTime movieplaytime, LuxBio.Library.Models.Chair[] chairs) {
            return base.Channel.ReleaseLockedByTimeAsync(movieplaytime, chairs);
        }
        
        public void UpdateLockedChairs(LuxBio.Library.Models.MoviePlayTime movieplaytime, LuxBio.Library.Models.Chair[] chairs, LuxBio.Library.Models.Customer customer) {
            base.Channel.UpdateLockedChairs(movieplaytime, chairs, customer);
        }
        
        public System.Threading.Tasks.Task UpdateLockedChairsAsync(LuxBio.Library.Models.MoviePlayTime movieplaytime, LuxBio.Library.Models.Chair[] chairs, LuxBio.Library.Models.Customer customer) {
            return base.Channel.UpdateLockedChairsAsync(movieplaytime, chairs, customer);
        }
    }
}
